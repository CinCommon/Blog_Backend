<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xyz.cincommon.mapper.BlogMapper">
	<resultMap id="blogMap" type="xyz.cincommon.model.BlogInfo">
		<id property="id" column="id" />
		<result property="uid" column="uid" />
		<result property="title" column="title" />
		<result property="content" column="content" />
		<result property="introduction" column="introduction" />
		<result property="status" column="status" />
		<result property="clickRates" column="click_rates" />
		<result property="replyAmount" column="reply_amount" />
		<result property="createDate" column="create_date" />
		<result property="updateDate" column="update_date" />
		<result property="updateUser" column="update_user" />
		<association property="forumInfo"
			javaType="xyz.cincommon.model.ForumInfo" />
		<collection property="tagInfoSet"
			ofType="xyz.cincommon.model.TagInfo">
			<id property="tagId" column="tag_id" />
			<result property="tagName" column="tag_name" />
		</collection>
	</resultMap>
	<select id="findTop10BlogInfo" resultMap="blogMap">
		SELECT res.*,
		ti.tag_id,
		ti.tag_name FROM (SELECT * FROM blog_info bi
		LIMIT 0, 10) res
		INNER JOIN blog_tag bt ON bt.blog_id =
		res.id
		INNER JOIN tag_info ti ON
		ti.tag_id = bt.tag_id
		ORDER BY res.create_date DESC
	</select>
	<select id="findById" resultMap="blogMap">
		SELECT bi.*, ti.tag_id AS tag_id,
		ti.tag_name AS tag_name FROM blog_info bi
		LEFT JOIN blog_tag bt ON
		bt.blog_id=bi.id
		LEFT JOIN tag_info ti ON bt.tag_id= ti.tag_id
		WHERE
		bi.id=(SELECT id FROM blog_info WHERE id &gt; #{id} LIMIT 0, 1) OR
		bi.id=(SELECT id FROM blog_info WHERE id &lt; #{id} ORDER BY id DESC
		LIMIT 0, 1) OR
		bi.id=(SELECT id FROM blog_info WHERE id = #{id});
	</select>
	<select id="findBlog" resultMap="blogMap">
		SELECT a.*, b.tag_id, b.tag_name
		FROM blog_info as a LEFT JOIN blog_tag
		as bi
		ON a.id = bi.blog_id LEFT
		JOIN tag_info as b ON b.tag_id =
		bi.tag_id
		WHERE 1=1
		<if test="uid != null">
			AND a.uid = #{uid}
		</if>
		<if test="startDate != null and endDate != null">
			AND
			date_format(a.create_date ,'%Y-%m-%d') &gt;=
			DATE_FORMAT(#{startDate},'%Y-%m-%d')
			AND date_format(a.create_date
			,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endDate},'%Y-%m-%d')
		</if>
		<if test="startDate != null and endDate == null">
			AND DATE_FORMAT(a.create_date ,'%Y-%m-%d') =
			DATE_FORMAT(#{startDate},'%Y-%m-%d')
		</if>
	</select>
	<select id="findOneYearBlogCount" resultType="java.util.HashMap">
		SELECT
		count(bi.id)
		AS count,
		DATE_FORMAT(bi.create_date, '%Y/%m') AS month
		FROM
		blog_info bi
		WHERE
		DATE_FORMAT(bi.create_date, '%Y') = #{year}
		GROUP BY
		MONTH;
	</select>
	<update id="updateBlog"
		parameterType="xyz.cincommon.model.BlogInfo" flushCache="true"
		statementType="PREPARED" timeout="20">
		UPDATE blog_info SET
		uid = #{uid},
		title = #{title},
		content = #{content},
		introduction = #{introduction},
		click_rates = #{clickRates},
		reply_amount = #{replyAmount},
		create_date
		= #{createDate},
		create_user
		= #{createUser},
		update_user= #{updateUser},
		update_date =
		#{updateDate},
		status = #{status}
		WHERE id = #{id}
	</update>
</mapper>